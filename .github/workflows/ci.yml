name: CI
on: [push, pull_request]
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9.16'
          cache: 'pip' # caching pip dependencies
      - run: python -m pip install pre-commit
        shell: bash
      - run: python -m pip freeze --local
        shell: bash
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-3|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - run: pre-commit run --show-diff-on-failure --color=always --all-files
        shell: bash
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.1
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pythonorg
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9.16"
      - name: Cache Python dependencies
        uses: actions/cache@v2
        env:
          cache-name: pythondotorg-cache-pip
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ github.job }}-${{ env.cache-name }}-${{ hashFiles('requirements.txt', '*-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-${{ env.cache-name }}-
            ${{ runner.os }}-${{ github.job }}-
            ${{ runner.os }}-
      - name: Install Python dependencies
        run: |
          pip install -U pip setuptools wheel
          pip install -r dev-requirements.txt
      - name: Run Tests
        run: |
          python -Wd -m coverage run manage.py test -v2
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/pythonorg
      - name: Coverage
        run: |
          coverage report -m --fail-under=75
